services:
  # Main Application (Modular Monolith)
  university-app:
    image: openjdk:21-jdk-slim
    container_name: university-app
    ports:
      - "8080:8080"
    volumes:
      - ./application/target/application-0.0.1-SNAPSHOT.jar:/app/app.jar
    working_dir: /app
    command: java -jar app.jar
    environment:
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:university
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:29092
      - SPRING_H2_CONSOLE_SETTINGS_WEB_ALLOW_OTHERS=true
    depends_on:
      - kafka
    networks:
      - university-network

  # Notifications Service (Microservice)
  notifications-service:
    image: openjdk:21-jdk-slim
    container_name: notifications-service
    ports:
      - "8081:8081"
    volumes:
      - ./notifications-service/target/notifications-service-0.0.1-SNAPSHOT.jar:/app/app.jar
    working_dir: /app
    command: java -jar app.jar
    environment:
      - SERVER_PORT=8081
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:29092
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_AUTO_CREATE_TOPICS=true
    depends_on:
      - kafka
    networks:
      - university-network

  # Kafka (Message Broker)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - university-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - university-network

  # Kafka UI for monitoring (optional but useful)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=university-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
    networks:
      - university-network

networks:
  university-network:
    driver: bridge
